/*Generated by WaveMaker Studio*/

package com.testdb_hsql.rolodex.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.testdb_hsql.rolodex.*;

/**
 * Service object for domain model class Store.
 * @see com.testdb_hsql.rolodex.Store
 */

public interface StoreService {
   /**
	 * Creates a new store.
	 * 
	 * @param created
	 *            The information of the created store.
	 * @return The created store.
	 */
	public Store create(Store created);

	/**
	 * Deletes a store.
	 * 
	 * @param storeId
	 *            The id of the deleted store.
	 * @return The deleted store.
	 * @throws EntityNotFoundException
	 *             if no store is found with the given id.
	 */
	public Store delete(Integer storeId) throws EntityNotFoundException;

	/**
	 * Finds all stores.
	 * 
	 * @return A list of stores.
	 */
	public Page<Store> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Store> findAll(Pageable pageable);
	
	/**
	 * Finds store by id.
	 * 
	 * @param id
	 *            The id of the wanted store.
	 * @return The found store. If no store is found, this method returns
	 *         null.
	 */
	public Store findById(Integer id) throws EntityNotFoundException;
	/**
	 * Updates the information of a store.
	 * 
	 * @param updated
	 *            The information of the updated store.
	 * @return The updated store.
	 * @throws EntityNotFoundException
	 *             if no store is found with given id.
	 */
	public Store update(Store updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the stores in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the store.
	 */

	public long countAll();


    public Page<Store> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

