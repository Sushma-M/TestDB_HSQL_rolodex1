/*Generated by WaveMaker Studio*/
package com.testdb_hsql.rolodex;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import java.util.Arrays;
import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "CUSTOMER", schema = "PUBLIC")
public class Customer implements java.io.Serializable {

    private Integer customerId;

    private String firstName;

    private String lastName;

    private String email;

    private Integer active;

    private Date createDate;

    private Address address;

    private Store store;

    private Integer storeId;

    private Integer addressId;

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "CUSTOMER_ID", nullable = false)
    public Integer getCustomerId() {
        return this.customerId;
    }

    public void setCustomerId(Integer customerId) {
        this.customerId = customerId;
    }

    @Column(name = "FIRST_NAME", length = 45)
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "LAST_NAME", length = 45)
    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = "EMAIL", length = 50)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "ACTIVE")
    public Integer getActive() {
        return this.active;
    }

    public void setActive(Integer active) {
        this.active = active;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_DATE", length = 26)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ADDRESS_ID", insertable = false, updatable = false)
    public Address getAddress() {
        return this.address;
    }

    public void setAddress(Address address) {
        if (address != null) {
            this.setAddressId(address.getAddressId());
        }
        this.address = address;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STORE_ID", insertable = false, updatable = false)
    public Store getStore() {
        return this.store;
    }

    public void setStore(Store store) {
        if (store != null) {
            this.setStoreId(store.getStoreId());
        }
        this.store = store;
    }

    @Column(name = "`STORE_ID`", nullable = true, precision = 19, scale = 0)
    public Integer getStoreId() {
        return this.storeId;
    }

    public void setStoreId(Integer storeId) {
        this.storeId = storeId;
    }

    @Column(name = "`ADDRESS_ID`", nullable = true, precision = 19, scale = 0)
    public Integer getAddressId() {
        return this.addressId;
    }

    public void setAddressId(Integer addressId) {
        this.addressId = addressId;
    }

    public Customer() {
    }

    public boolean equals(Object o) {
        if (this == o)
            return true;
        if ((o == null))
            return false;
        if (!(o instanceof Customer))
            return false;
        Customer that = (Customer) o;
        return ((this.getCustomerId() == that.getCustomerId()) || (this.getCustomerId() != null && that.getCustomerId() != null && this.getCustomerId().equals(that.getCustomerId())));
    }

    public int hashCode() {
        int result = 17;
        result = 37 * result + (getCustomerId() == null ? 0 : this.getCustomerId().hashCode());
        return result;
    }
}
