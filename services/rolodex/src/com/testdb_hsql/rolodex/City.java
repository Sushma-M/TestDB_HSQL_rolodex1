/*Generated by WaveMaker Studio*/
package com.testdb_hsql.rolodex;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.util.Arrays;
import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name = "CITY", schema = "PUBLIC")
public class City implements java.io.Serializable {

    private Integer cityId;

    private String city;

    private Country country;

    private Set<Address> addresses = new HashSet<Address>(0);

    private int countryId;

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "CITY_ID", nullable = false)
    public Integer getCityId() {
        return this.cityId;
    }

    public void setCityId(Integer cityId) {
        this.cityId = cityId;
    }

    @Column(name = "CITY", nullable = false, length = 50)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "COUNTRY_ID", nullable = false, insertable = false, updatable = false)
    public Country getCountry() {
        return this.country;
    }

    public void setCountry(Country country) {
        if (country != null) {
            this.setCountryId(country.getCountryId());
        }
        this.country = country;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = { CascadeType.ALL }, mappedBy = "city")
    public Set<Address> getAddresses() {
        return this.addresses;
    }

    public void setAddresses(Set<Address> addresses) {
        this.addresses = addresses;
    }

    @Column(name = "`COUNTRY_ID`", nullable = false, precision = 19, scale = 0)
    public int getCountryId() {
        return this.countryId;
    }

    public void setCountryId(int countryId) {
        this.countryId = countryId;
    }

    public City() {
    }

    public boolean equals(Object o) {
        if (this == o)
            return true;
        if ((o == null))
            return false;
        if (!(o instanceof City))
            return false;
        City that = (City) o;
        return ((this.getCityId() == that.getCityId()) || (this.getCityId() != null && that.getCityId() != null && this.getCityId().equals(that.getCityId())));
    }

    public int hashCode() {
        int result = 17;
        result = 37 * result + (getCityId() == null ? 0 : this.getCityId().hashCode());
        return result;
    }
}
