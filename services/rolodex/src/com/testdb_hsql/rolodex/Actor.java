/*Generated by WaveMaker Studio*/

package com.testdb_hsql.rolodex;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * Actor generated by hbm2java
 */
@Entity
@Table(name="ACTOR"
    ,schema="PUBLIC"
)
public class Actor  implements java.io.Serializable
 {


private Integer actorId;
private String firstName;
private String lastName;
private Set<FilmActor> filmActors = new HashSet<FilmActor>(0);

    public Actor() {
    }



     @Id @GeneratedValue(strategy=IDENTITY)

    

    @Column(name="ACTOR_ID", nullable=false)
    public Integer getActorId() {
        return this.actorId;
    }
    
    public void setActorId(Integer actorId) {
        this.actorId = actorId;
    }

    

    @Column(name="FIRST_NAME", nullable=false, length=45)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    

    @Column(name="LAST_NAME", nullable=false, length=45)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="actor")
    public Set<FilmActor> getFilmActors() {
        return this.filmActors;
    }
    
    public void setFilmActors(Set<FilmActor> filmActors) {
        this.filmActors = filmActors;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Actor) )
		 return false;

		 Actor that = ( Actor ) o;

		 return ( (this.getActorId()==that.getActorId()) || ( this.getActorId()!=null && that.getActorId()!=null && this.getActorId().equals(that.getActorId()) ) );

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + ( getActorId() == null ? 0 : this.getActorId().hashCode() );

         return result;
     }


}

