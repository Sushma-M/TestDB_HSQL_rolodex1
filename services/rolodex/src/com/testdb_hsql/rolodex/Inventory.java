/*Generated by WaveMaker Studio*/
package com.testdb_hsql.rolodex;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import java.util.Arrays;
import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;

/**
 * Inventory generated by hbm2java
 */
@Entity
@Table(name = "INVENTORY", schema = "PUBLIC")
public class Inventory implements java.io.Serializable {

    private Integer inventoryId;

    private Store store;

    private Film film;

    private int storeId;

    private int filmId;

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "INVENTORY_ID", nullable = false)
    public Integer getInventoryId() {
        return this.inventoryId;
    }

    public void setInventoryId(Integer inventoryId) {
        this.inventoryId = inventoryId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STORE_ID", nullable = false, insertable = false, updatable = false)
    public Store getStore() {
        return this.store;
    }

    public void setStore(Store store) {
        if (store != null) {
            this.setStoreId(store.getStoreId());
        }
        this.store = store;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "FILM_ID", nullable = false, insertable = false, updatable = false)
    public Film getFilm() {
        return this.film;
    }

    public void setFilm(Film film) {
        if (film != null) {
            this.setFilmId(film.getFilmId());
        }
        this.film = film;
    }

    @Column(name = "`STORE_ID`", nullable = false, precision = 19, scale = 0)
    public int getStoreId() {
        return this.storeId;
    }

    public void setStoreId(int storeId) {
        this.storeId = storeId;
    }

    @Column(name = "`FILM_ID`", nullable = false, precision = 19, scale = 0)
    public int getFilmId() {
        return this.filmId;
    }

    public void setFilmId(int filmId) {
        this.filmId = filmId;
    }

    public Inventory() {
    }

    public boolean equals(Object o) {
        if (this == o)
            return true;
        if ((o == null))
            return false;
        if (!(o instanceof Inventory))
            return false;
        Inventory that = (Inventory) o;
        return ((this.getInventoryId() == that.getInventoryId()) || (this.getInventoryId() != null && that.getInventoryId() != null && this.getInventoryId().equals(that.getInventoryId())));
    }

    public int hashCode() {
        int result = 17;
        result = 37 * result + (getInventoryId() == null ? 0 : this.getInventoryId().hashCode());
        return result;
    }
}
